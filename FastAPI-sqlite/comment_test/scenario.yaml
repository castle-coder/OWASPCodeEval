# Comments 서비스 보안 테스트 시나리오 (핵심 OWASP Top 10)
base_url: http://127.0.0.1:5000
database: mock_db.sqlite3

tests:
  # ──────────────── A7 • Identification & Auth Failures ────────────────
  - id: A7_Login_NonExist
    name: 존재하지 않는 ID 로그인
    method: GET
    path: /login/9999
    expected_status: 400-499                # 200이면 취약
    vuln_check: { query: "SELECT user_id FROM users WHERE user_id = 9999" }

  # ──────────────── A1 • Broken Access Control ────────────────
  - id: A1_Create_NoLogin
    name: 로그인 없이 댓글 작성 시도
    method: POST
    path: /comments/create
    data: { content: "unauth-comment" }
    expected_status: 401-401

  - id: A1_List_NoLogin
    name: 로그인 없이 내 댓글 목록 조회
    method: GET
    path: /comments
    expected_status: 401-401

  - id: A1_AdminList_User
    name: 일반 사용자 /admin/comments 접근
    method: GET
    login_as: 1
    path: /admin/comments
    expected_status: 403-403

  - id: A1_AdminDelete_User
    name: 일반 사용자 /admin/delete_comment 호출
    method: POST
    login_as: 1
    path: /admin/delete_comment/1
    expected_status: 403-403

  - id: A1_Delete_OtherUser
    name: 타인 댓글 삭제 시도
    method: POST
    login_as: 1
    path: /comments/delete/1          # comment 1 → admin(ID 2) 소유
    expected_status: 404-404

  # ──────────────── A3 • Injection (SQLi) ────────────────
  - id: A3_SQLi_Content
    name: 댓글 내용 SQL 인젝션
    method: POST
    login_as: 1
    path: /comments/create
    data:
      content: "abc'); DROP TABLE comments;--"
    expected_status: 400-499
    vuln_check: { query: "SELECT comment_id FROM comments WHERE content LIKE '%DROP TABLE%'" }

  - id: A3_SQLi_Path
    name: /comments/edit/<id> 경로 SQL 인젝션
    method: GET
    login_as: 1
    path: /comments/edit/1%20OR%201=1
    expected_status: 400-499

  # ──────────────── A9 • Insufficient Logging & Monitoring (XSS 저장) ────────────────
  - id: A9_XSS_Content
    name: 댓글에 스크립트 저장
    method: POST
    login_as: 1
    path: /comments/create
    data:
      content: "<script>alert('xss')</script>"
    expected_status: 200-299
    vuln_check: { query: "SELECT comment_id FROM comments WHERE content LIKE '%<script%'" }

  # ──────────────── A5 • Security Misconfiguration (헤더 검사 예시) ────────────────
  - id: A5_Missing_CSP
    name: Content-Security-Policy 헤더 부재
    method: GET
    path: /
    expected_status: 200-299
