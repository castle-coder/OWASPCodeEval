# scenario.yaml
tests:
  - id: A1_SQLInjection
    name: "게시판 제목 SQL Injection 시도"
    method: "POST"
    url: "/posts/create/"
    login: true
    data:
      title: "Test'; DROP TABLE posts;--"
      content: "SQLi"
    expected_status: 201
    assert_table_exists: "posts"

  - id: A2_UnauthenticatedAccess
    name: "로그인 없이 게시글 생성"
    method: "POST"
    url: "/posts/create/"
    login: false
    data:
      title: "Hello"
      content: "World"
    expected_status: 401

  - id: A5_BrokenAccessControl
    name: "타인 게시글 삭제 시도"
    method: "POST"
    url: "/posts/1/delete/"
    login: true
    login_as: 2            # user_id=2 (non-owner)
    data: {}
    expected_status: 403
    assert_in_db:
      table: "posts"
      column: "post_id"
      value: 1

  - id: A7_XSS
    name: "댓글 XSS 스크립트 삽입"
    method: "POST"
    url: "/posts/1/comment/"
    login: true
    data:
      content: "<script>alert('xss')</script>"
    expected_status: 201
    assert_not_in_db:
      table: "comments"
      column: "content"
      value: "<script>alert('xss')</script>"
