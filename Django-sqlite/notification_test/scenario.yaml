# Django Notification API – Test & Security Scenarios
base_url: http://127.0.0.1:8000
database: mock_db.sqlite3

tests:
  # ──────────────────── 초기 데이터 세팅 ────────────────────
  - id: _PRE_SeedNotification
    name: (사전) admin → user 알림 1개 생성
    login_as: 2                    # admin 세션 확보
    db_exec:
      - "INSERT INTO notifications (recipient_id, sender_id, message, created_at, is_read, is_blocked) \
         VALUES (1, 2, 'hello user', datetime('now'), 0, 0);"
    set_var_from_db:
      NOTIF_ID: "SELECT id FROM notifications WHERE message = 'hello user' ORDER BY id DESC LIMIT 1"

  # ────────── 정상 플로우 ──────────
  - id: OK_List_User
    name: user 알림 목록 조회
    method: GET
    login_as: 1
    path: /notifications/
    expected_status: 200-299

  - id: OK_Mark_Read
    name: 알림 읽음 처리
    method: POST
    login_as: 1
    path: /notifications/read/{NOTIF_ID}/
    expected_status: 200-299
    vuln_check:
      query: "SELECT is_read FROM notifications WHERE id = {NOTIF_ID} AND is_read = 1"

  # ────────── A7 • Identification & Authentication Failures ──────────
  - id: A7_Login_NonExist
    name: 존재하지 않는 사용자 로그인
    method: GET
    path: /login/999/
    expected_status: 404-404

  - id: A7_List_NoLogin
    name: 로그인 없이 목록
    method: GET
    path: /notifications/
    expected_status: 401-401

  # ────────── A1 • Broken Access Control ──────────
  - id: A1_Admin_Delete_UserNotif
    name: admin이 아닌 수신자 외 삭제 시도
    method: POST
    login_as: 2
    path: /notifications/delete/{NOTIF_ID}/
    expected_status: 403-403

  - id: A1_User_Block_Attempt
    name: 일반 user block 시도
    method: POST
    login_as: 1
    path: /admin/block_notification/{NOTIF_ID}/
    expected_status: 401-401

  - id: A1_Admin_Block
    name: admin이 알림 block
    method: POST
    login_as: 2
    path: /admin/block_notification/{NOTIF_ID}/
    expected_status: 200-299

  # ────────── A4 • IDOR / Block 우회 ──────────
  - id: A4_User_View_Blocked
    name: 차단 알림 읽기 시도
    method: POST
    login_as: 1
    path: /notifications/read/{NOTIF_ID}/
    expected_status: 403-403

  # ────────── A3 • Injection (SQLi) ──────────
  - id: A3_SQLi_ReportReason
    name: 신고 사유 SQL 인젝션
    method: POST
    login_as: 1
    path: /notifications/report/{NOTIF_ID}/
    data: { reason: "'); DROP TABLE users;--" }
    expected_status: 200-299
    vuln_check:
      query: "SELECT name FROM sqlite_master WHERE type='table' AND name='users'"

  # ────────── A9 • Stored XSS ──────────
  - id: A9_XSS_ReportReason
    name: 신고 사유 XSS 저장
    method: POST
    login_as: 1
    path: /notifications/report/{NOTIF_ID}/
    data: { reason: "<img src=x onerror=alert(1)>" }
    expected_status: 200-299
    vuln_check:
      query: "SELECT reason FROM notification_reports WHERE reason LIKE '%onerror=%'"

  # ────────── A5 • Security Misconfiguration ──────────
  - id: A5_Header_CSP
    name: /notifications CSP 헤더 부재
    method: GET
    login_as: 1
    path: /notifications/
    expected_status: 200-299
    header_required: ["Content-Security-Policy"]

  # ────────── A6 • Unsupported HTTP Methods ──────────
  - id: A6_TRACE_Root
    name: TRACE / 허용 여부
    method: TRACE
    path: /
    expected_status: 405-405
